/*
  SASS variables are information about icon's compiled state, stored under its original file name

  .icon-home
    width: $icon-home-width

  The large array-like variables contain all information about a single icon
  $icon-home: x y offset_x offset_y width height total_width total_height image_path

  At the bottom of this section, we provide information about the spritesheet itself
  $spritesheet: width height image $spritesheet-sprites
  */
$arrow-l-name: 'arrow-l'
$arrow-l-x: 0px
$arrow-l-y: 24px
$arrow-l-offset-x: 0px
$arrow-l-offset-y: -24px
$arrow-l-width: 30px
$arrow-l-height: 56px
$arrow-l-total-width: 110px
$arrow-l-total-height: 80px
$arrow-l-image: '../img/sprite.png'
$arrow-l: (0px, 24px, 0px, -24px, 30px, 56px, 110px, 80px, '../img/sprite.png', 'arrow-l', )
$arrow-r-name: 'arrow-r'
$arrow-r-x: 30px
$arrow-r-y: 24px
$arrow-r-offset-x: -30px
$arrow-r-offset-y: -24px
$arrow-r-width: 30px
$arrow-r-height: 56px
$arrow-r-total-width: 110px
$arrow-r-total-height: 80px
$arrow-r-image: '../img/sprite.png'
$arrow-r: (30px, 24px, -30px, -24px, 30px, 56px, 110px, 80px, '../img/sprite.png', 'arrow-r', )
$coffee-name: 'coffee'
$coffee-x: 60px
$coffee-y: 24px
$coffee-offset-x: -60px
$coffee-offset-y: -24px
$coffee-width: 16px
$coffee-height: 17px
$coffee-total-width: 110px
$coffee-total-height: 80px
$coffee-image: '../img/sprite.png'
$coffee: (60px, 24px, -60px, -24px, 16px, 17px, 110px, 80px, '../img/sprite.png', 'coffee', )
$flask-name: 'flask'
$flask-x: 60px
$flask-y: 41px
$flask-offset-x: -60px
$flask-offset-y: -41px
$flask-width: 13px
$flask-height: 16px
$flask-total-width: 110px
$flask-total-height: 80px
$flask-image: '../img/sprite.png'
$flask: (60px, 41px, -60px, -41px, 13px, 16px, 110px, 80px, '../img/sprite.png', 'flask', )
$logo-name: 'logo'
$logo-x: 0px
$logo-y: 0px
$logo-offset-x: 0px
$logo-offset-y: 0px
$logo-width: 110px
$logo-height: 24px
$logo-total-width: 110px
$logo-total-height: 80px
$logo-image: '../img/sprite.png'
$logo: (0px, 0px, 0px, 0px, 110px, 24px, 110px, 80px, '../img/sprite.png', 'logo', )
$plane-name: 'plane'
$plane-x: 76px
$plane-y: 24px
$plane-offset-x: -76px
$plane-offset-y: -24px
$plane-width: 17px
$plane-height: 16px
$plane-total-width: 110px
$plane-total-height: 80px
$plane-image: '../img/sprite.png'
$plane: (76px, 24px, -76px, -24px, 17px, 16px, 110px, 80px, '../img/sprite.png', 'plane', )
$tv-name: 'tv'
$tv-x: 93px
$tv-y: 24px
$tv-offset-x: -93px
$tv-offset-y: -24px
$tv-width: 16px
$tv-height: 16px
$tv-total-width: 110px
$tv-total-height: 80px
$tv-image: '../img/sprite.png'
$tv: (93px, 24px, -93px, -24px, 16px, 16px, 110px, 80px, '../img/sprite.png', 'tv', )
$spritesheet-width: 110px
$spritesheet-height: 80px
$spritesheet-image: '../img/sprite.png'
$spritesheet-sprites: ($arrow-l, $arrow-r, $coffee, $flask, $logo, $plane, $tv, )
$spritesheet: (110px, 80px, '../img/sprite.png', $spritesheet-sprites, )

/*
  The provided mixins are intended to be used with the array-like variables

  .icon-home
    @include sprite-width($icon-home)

  .icon-email
    @include sprite($icon-email)

  Example usage in HTML:
    `display: block` sprite:
    <div class="icon-home"></div>

  To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
    // CSS
    .icon {
      display: inline-block;
    }

    // HTML
    <i class="icon icon-home"></i>
  */
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

/*
  The `sprites` mixin generates identical output to the CSS template
    but can be overridden inside of SASS

  @include sprites($spritesheet-sprites)
  */
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
